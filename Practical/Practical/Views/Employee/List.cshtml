@{
    ViewBag.Title = "List Employee";
}

<h3>Employee Master</h3>
<hr />
<p>
    <span>
        @Html.ActionLink("Create Employee", "Create")
    </span>
</p>


<table style="width:100%">
    <tr>
        <td style="width:15%">Department</td>
        <td style="width:25%">@Html.DropDownList("Department", ViewData["Department"] as List<SelectListItem>, "--Select--", new { @class = "form-control" })</td>
        <td style="width:15%">&nbsp;</td>
        <td style="width:25%">&nbsp;</td>
        <td style="width:20%"><input type="submit" value="Search Data" onclick="BindData()" id="b_Go"/></td>
    </tr>
</table>
<span id="l_Msg" style="color:red"></span>
<span id="l_Msg1" style="color:red"></span>

<table class="table" id="tbl_grid">
</table>

<script src="~/Scripts/jquery-1.12.4.min.js"></script>
<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/jquery-ui-1.12.1.js"></script>
<script src="~/Scripts/datatables.min.js"></script>
<link href="~/Content/Jquery.Datatable.css" rel="stylesheet" />
<script type="text/javascript">
    var $j = jQuery.noConflict();

    function BindData() {
        $j("#l_Msg").html("");
        $j("#tbl_grid").empty();

        var Department = $j("#Department").val()

        $j.ajax({
            async: false,
            type: "Post",
            url: "/Practical/Employee/JsonList",
            data: "{'Department':'" + Department + "'}",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (Result) {
                if (Result.Count != 0) {
                    BindDataTable(Result.Data);
                }
                else {
                    $j("#l_Msg").html("No Data Found ||");
                }
            },
            error: function (response) {
                alert(response.responseText);
            }
        });
    }

    function BindDataTable(Result) {
        var table = $j('#tbl_grid').DataTable({
            searching: false,
            paging: false,
            info: false,
            destroy: true,
            ordering: false,
            deferRender: true,
            data: Result,
            columns: [
                {
                    "title": "Sr.No.",
                    "class": "bdr_v text_align_center",
                    "data": "Emp_Id",
                },
                {
                    "title": "Name",
                    "class": "bdr_v text_align_center",
                    "data": "Emp_Name",
                },
                {
                    "title": "Department",
                    "class": "bdr_v text_align_center",
                    "data": "Emp_Department",
                },
                {
                    "title": "Date of Birth",
                    "class": "bdr_v text_align_center",
                    "data": "Emp_DOB",
                },
                {
                    "title": "Age",
                    "class": "bdr_v text_align_center",
                    "data": "Age",
                },
                {
                    "title": "Status",
                    "class": "bdr_v text_align_center",
                    "data": "Emp_Status",
                    "render": function (data, type, full) {
                        if (data == 1) {
                            return "Active"
                        }
                        else {
                            return "In-Active"
                        }
                    },
                },
                {
                    "title": "",
                    "class": "bdr_v text_align_center",
                    "data": "Emp_Id",
                    "render": function (data, type, full) {
                        return '<a href="/Practical/Employee/Update/' + data + '">Edit</a> | <a class="Delete" href="javascript:;" onclick="Delete(' + data + ')">Delete</a>'
                    },
                },
            ],
            "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                $j("td:first", nRow).html(iDisplayIndex + 1);
                return nRow;
            },
        });
    }

    function Delete(Id) {
        if (confirm("Are you sure you want to delete record")) {
            $j.ajax({
                async: false,
                type: "Post",
                url: "/Practical/Employee/Delete",
                data: "{'Id':'" + Id + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "text",
                success: function (Result) {
                    BindData();
                    $j("#l_Msg1").html(Result)
                },
                error: function (response) {
                    debugger;
                    alert(response.responseText);
                }
            });
        }
        else {
            return false;
        }
    }
</script>